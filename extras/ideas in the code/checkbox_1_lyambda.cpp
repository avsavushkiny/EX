// В этом коде вы создаете новый объект eFunction и присваиваете его указатель переменной func1. Конструктор eFunction принимает лямбда-функцию в качестве первого аргумента.

// Лямбда-функция - это анонимная функция, которая может быть определена прямо в месте ее использования. В этом случае, лямбда-функция не принимает параметров и выполняет две операции: устанавливает глобальное состояние globalStateLED на значение, возвращаемое функцией isChecked для check1, и вызывает функцию ledControl.

// Вот как это работает:

eFunction *func1 = new eFunction([check1]() { 
    globalStateLED = check1->isChecked();
    ledControl();
});

// В этом коде:

// eFunction *func1 - это указатель на объект eFunction.
// new eFunction - это оператор new, который создает новый объект eFunction.
([check1]() { globalStateLED = check1->isChecked(); ledControl(); })
// - это лямбда-функция, которая не принимает параметров и выполняет две операции: устанавливает глобальное состояние globalStateLED на значение, возвращаемое функцией isChecked для check1, и вызывает функцию ledControl.
// Таким образом, этот код создает новый объект eFunction, передает в его конструктор лямбда-функцию, которая устанавливает глобальное состояние globalStateLED на значение, возвращаемое функцией isChecked для check1, и вызывает функцию ledControl, и присваивает указатель на этот объект переменной func1.

// Пример упрощения этого кода может быть следующим:

bool isChecked = check1->isChecked();
globalStateLED = isChecked;
ledControl();

// В этом упрощенном коде вы сначала получаете значение, возвращаемое функцией isChecked для check1, и присваиваете его переменной isChecked. Затем вы устанавливаете глобальное состояние globalStateLED на значение isChecked и вызываете функцию ledControl. Этот код выполняет те же операции, что и исходный код, но без создания нового объекта eFunction.